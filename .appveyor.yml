# .appveyor.yml

# Build version
version: '0.9.6.{build}'

# Use the latest available toolchain
image: Visual Studio 2019

# fetch repository as zip archive
shallow_clone: true

# PRs do not increment the build number
pull_requests:
  do_not_increment_build_number: true

# Build configurations
configuration:
  - RelWithDebInfo
  - Release

# Default environment variables
environment:
  _IS_BUILD_CANARY: false
  _RELEASE_NAME: FF7OpenGL

# Prepare Cpp environment
before_build:
  - cmd: |
      call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars32.bat"
  - ps: |
      if ($env:APPVEYOR_REPO_TAG -eq "true" -and $env:APPVEYOR_REPO_TAG_NAME) {
        $env:APPVEYOR_BUILD_VERSION = $env:APPVEYOR_BUILD_VERSION.Substring(0,$env:APPVEYOR_BUILD_VERSION.LastIndexOf('.')) + ".0"
        $env:_RELEASE_NAME = $env:_RELEASE_NAME + "-v" + $env:APPVEYOR_BUILD_VERSION
      } else {
        $env:_RELEASE_NAME = $env:_RELEASE_NAME + "-Canary"
        $env:APPVEYOR_REPO_TAG_NAME = "canary"
        $env:_IS_BUILD_CANARY = "true"
      }

for:
  -
    matrix:
      only:
        - configuration: RelWithDebInfo
    build_script:
      - cmd: |
          md .dist\build\x86-RelWithDebInfo
          cd .dist/build/x86-RelWithDebInfo
          cmake -G "Visual Studio 16 2019" -A Win32 -D_DLL_VERSION="%appveyor_build_version%" -DCMAKE_BUILD_TYPE="RelWithDebInfo" -DCMAKE_BINARY_DIR=".dist/build/x86-RelWithDebInfo" --config RelWithDebInfo ../../..
          cmake --build . --config RelWithDebInfo
  -
    matrix:
      only:
        - configuration: Release
    build_script:
      - cmd: |
          md .dist\build\x86-Release
          cd .dist/build/x86-Release
          cmake -G "Visual Studio 16 2019" -A Win32 -D_DLL_VERSION="%appveyor_build_version%" -DCMAKE_BUILD_TYPE="Release" -DCMAKE_BINARY_DIR=".dist/build/x86-Release" --config Release ../../..
          cmake --build . --config Release

# Do not run unit tests
test: off

# Package artifacts
artifacts:
  - path: .dist\build\x86-RelWithDebInfo\bin
    name: ${_RELEASE_NAME}_debug
    type: zip
  - path: .dist\build\x86-Release\bin
    name: ${_RELEASE_NAME}
    type: zip

# Create a GitHub release for every tag
deploy:
  # Deploy only when new tags are pushed
  - provider: GitHub
    tag: ${appveyor_repo_tag_name}
    release: ${_RELEASE_NAME}
    artifact: ${_RELEASE_NAME}_debug,${_RELEASE_NAME}
    auth_token:
      secure: SXUyBqg8+wl9fn3xHV2Br0xDH65EyPAnFwJbwcg94wIesv9osQEefC3zxu9iDTUh
    on:
      _IS_BUILD_CANARY: false
  # Deploy on each commit
  - provider: GitHub
    tag: ${appveyor_repo_tag_name}
    release: ${_RELEASE_NAME} v${appveyor_build_version}
    artifact: ${_RELEASE_NAME}_debug,${_RELEASE_NAME}
    prerelease: true
    force_update: true
    auth_token:
      secure: SXUyBqg8+wl9fn3xHV2Br0xDH65EyPAnFwJbwcg94wIesv9osQEefC3zxu9iDTUh
    on:
      _IS_BUILD_CANARY: true
    description: |
      This is a canary build. Please be aware it may be prone to crashing and is NOT tested by anyone. Use this build AT YOUR OWN RISK!
